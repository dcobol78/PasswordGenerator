@page "/"
@rendermode RenderMode.InteractiveServer

@inject IClipboardService ClipboardService
@inject IPasswordService PasswordService

<button class="btn btn-primary" @onclick="ReloadList">Обновить список</button>

<div class="container mt-4">
    <h3 class="mb-3">Пароли в буффере</h3>

    @if (Passwords != null && Passwords.Any())
    {
        <button class="btn btn-secondary" @onclick="CopyToClipboard">Скопировать в буфер обмена</button>
        <table class="table table-striped">
            <thead>
                <tr>
                    <th scope="col">ID</th>
                    <th scope="col">Password</th>
                    <th scope="col">Used Alphabit</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var password in Passwords)
                {
                    <tr>
                        <td>@password.Id</td>
                        <td>@password.PasswordContent</td>
                        <td>@password.UsedAlphabit</td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <div class="alert alert-info">Паролей нет или не подгружены.</div>
    }
</div>

@code {
    public List<PasswordViewModel> Passwords { get; set; }

    protected override void OnParametersSet()
    {
        if (Passwords != null && Passwords.Any())
            Passwords.Clear();
        else
            Passwords = new();
        var savedPasswords = PasswordService.Passwords;
        foreach (var password in savedPasswords)
        {
            Passwords.Add(new PasswordViewModel(password));
        }
    }

    public void ReloadList()
    {
        if (Passwords != null && Passwords.Any())
            Passwords.Clear();
        foreach (var password in PasswordService.Passwords)
        {
            Passwords.Add(new PasswordViewModel(password));
        }
    }

    async Task CopyToClipboard()
    {
        string textToCopy = JsonSerializer.Serialize(Passwords);

        await ClipboardService.CopyTextToClipboard(textToCopy);
    }
}
